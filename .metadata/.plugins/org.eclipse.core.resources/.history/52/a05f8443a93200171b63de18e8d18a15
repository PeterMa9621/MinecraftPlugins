package prefixManager;

import org.bukkit.plugin.RegisteredServiceProvider;
import org.bukkit.plugin.java.JavaPlugin;

import net.milkbowl.vault.economy.Economy;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.permissions.Permission;

public class PrefixManager extends JavaPlugin
{
	ArrayList<String> prefixList = new ArrayList<String>();
	ArrayList<String> costTypeList = new ArrayList<String>();
	ArrayList<Integer> priceList = new ArrayList<Integer>();
	
	Inventory inv = null;
	
	public void onEnable() 
	{
		if(!new File(getDataFolder(),"Data").exists()) 
		{
			new File(getDataFolder(),"Data").mkdir();
		}

		loadConfig();
		getServer().getPluginManager().registerEvents(new PrefixManagerListener(this), this);
        getLogger().info("Finish loading");
	}

	public void onDisable() 
	{
		getLogger().info("Unload");
	}

	public void loadConfig()
	{
		File file=new File(getDataFolder(),"config.yml");
		FileConfiguration config;
		if (!file.exists())
		{
			config = load(file);
			
			config.set("Prefix.1.Content", "&a称号");
			config.set("Prefix.1.Cost.Type", "Money");
			config.set("Prefix.1.Cost.Price", 1000);
			config.set("Prefix.2.Content", "&a测试");
			config.set("Prefix.2.Cost.Type", "PlayerPoints");
			config.set("Prefix.2.Cost.Price", 500);
			config.set("Prefix.3.Content", "&c我是大王");
			config.set("Prefix.3.Cost.Type", "Money");
			config.set("Prefix.3.Cost.Price", 0);
			
			try 
			{
				config.save(file);
			} 
			catch (IOException e) 
			{
				e.printStackTrace();
			}
			loadConfig();
			return;
		}
		
		config = load(file);
		costTypeList.clear();
		prefixList.clear();
		priceList.clear();
		String prefix = null;
		String costType = null;
		int price = 0;

		for(int i=0; config.contains("Prefix."+(i+1)); i++)
		{
			prefix = config.getString("Prefix."+(i+1)+".Content");
			if(prefix.contains("&"))
			{
				prefix = prefix.replace("&", "§");
			}
			costType = config.getString("Prefix."+(i+1)+".Cost.Type");
			price = config.getInt("Prefix."+(i+1)+".Cost.Price");

			costTypeList.add(costType);
			priceList.add(price);
			prefixList.add(prefix);
		}
	}
	
	public Inventory initShop(Player p)
	{
		ArrayList<String> myPrefix = new ArrayList<String>();
		File file=new File(getDataFolder(),"/Data/"+p.getName()+".yml");
		FileConfiguration config;
		config = load(file);
		if(config.getString("MyPrefix")!=null)
		{
			for(String prefix:config.getString("MyPrefix").split("%%"))
			{
				myPrefix.add(prefix);
			}
		}
		
		inv = Bukkit.createInventory(p, ((prefixList.size()/9)+1)*9, "§5称号商店");
		ItemStack book = new ItemStack(Material.WRITTEN_BOOK);
		String costType = null;
		
		for(int i=0; i<prefixList.size(); i++)
		{
			if(costTypeList.get(i).equalsIgnoreCase("Money"))
				costType = "金币";
			else
				costType = "点券";
			ArrayList<String> lore = new ArrayList<String>();
			lore.add("§5点击购买该称号");
			lore.add("§5价格:§a"+priceList.get(i)+"§5"+costType);
			if(myPrefix.contains(prefixList.get(i)))
			{
				lore.add("§4已拥有");
			}
			ItemMeta meta = book.getItemMeta();
			meta.setDisplayName("§f称号:"+prefixList.get(i));
			meta.setLore(lore);
			book.setItemMeta(meta);
			
			inv.setItem(i, book);
		}
		
		return inv;
	}
	
	public Inventory initMyGUI(Player p)
	{
		ArrayList<String> myPrefix = new ArrayList<String>();

		File file=new File(getDataFolder(),"/Data/"+p.getName()+".yml");
		FileConfiguration config;
		config = load(file);

		if(config.getString("MyPrefix")!=null)
		{

			for(String prefix:config.getString("MyPrefix").split("%%"))
			{
				myPrefix.add(prefix);
			}
		}


		
		inv = Bukkit.createInventory(p, ((myPrefix.size()/9)+1)*9, "§5我的称号");
		if(myPrefix.isEmpty())
			return inv;
		ItemStack book = new ItemStack(Material.BOOK);

		for(int i=0; i<myPrefix.size(); i++)
		{

			ArrayList<String> lore = new ArrayList<String>();
			lore.add("§c点击切换该称号");
			ItemMeta meta = book.getItemMeta();
			meta.setDisplayName("§f称号:"+myPrefix.get(i));
			meta.setLore(lore);
			book.setItemMeta(meta);
			
			inv.setItem(i, book);
		}
		
		return inv;
	}
	
	public FileConfiguration load(File file)
	{
        if (!(file.exists())) 
        { //假如文件不存在
        	try   //捕捉异常，因为有可能创建不成功
        	{
        		file.createNewFile();
        	}
        	catch(IOException e)
        	{
        		e.printStackTrace();
        	}
        }
        return YamlConfiguration.loadConfiguration(file);
	}
	public FileConfiguration load(String path)
	{
		File file=new File(path);
		if(!file.exists())
		{
			try
		{
				file.createNewFile();
		}
			catch(IOException e)
			{
				e.printStackTrace();
			}
		}
		return YamlConfiguration.loadConfiguration(new File(path));
	}
	
	public boolean onCommand(CommandSender sender,Command cmd,String label,String[] args)  
	{
		if (cmd.getName().equalsIgnoreCase("ch"))
		{
			if (args.length==0)
			{
				sender.sendMessage("§a=========[称号系统]=========");
				sender.sendMessage("§a/ch shop §3打开称号商店");
				sender.sendMessage("§a/ch my §3打开我的称号界面");
				if(sender.isOp())
				{
					sender.sendMessage("§a/ch reload §3重载配置");
				}
				return true;
			}
			
			if(args[0].equalsIgnoreCase("shop"))
			{
				if(sender instanceof Player)
				{
					Player p = (Player)sender;
					Inventory shop = initShop(p);
					p.openInventory(shop);
					return true;
				}
			}
			
			if(args[0].equalsIgnoreCase("my"))
			{
				if(sender instanceof Player)
				{
					Player p = (Player)sender;
					Inventory my = initMyGUI(p);
					p.openInventory(my);
					return true;
				}
			}
			
			
		}

		return false;
		
	}
	
	
}

