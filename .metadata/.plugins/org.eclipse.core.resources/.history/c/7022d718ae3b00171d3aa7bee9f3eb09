package antiXray;

import org.bukkit.plugin.java.JavaPlugin;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

public class AntiXray extends JavaPlugin
{
	int totalPoints = 0;
	HashMap<Integer, Integer> blocks = new HashMap<Integer, Integer>();
	HashMap<Integer, Integer> blocksForRecover = new HashMap<Integer, Integer>();
	boolean recoverBlock = false;
	int recoverPoint = 0;
	ItemStack recoverItem = null;
	HashMap<String, Integer> playerData = new HashMap<String, Integer>();
	
	int heightUnlimit = 0;
	
	public void onEnable() 
	{
		if(!new File(getDataFolder(),"Data").exists()) 
		{
			new File(getDataFolder(),"Data").mkdir();
		}
		loadConfig();
		getServer().getPluginManager().registerEvents(new AntiXrayListener(this), this);
		Bukkit.getConsoleSender().sendMessage("§a[AntiXray] §e限制挖矿系统加载完毕");
	}

	public void onDisable()
	{
		saveConfig();
		Bukkit.getConsoleSender().sendMessage("§a[AntiXray] §e限制挖矿系统卸载完毕");
	}

	public FileConfiguration load(File file)
	{
        if (!(file.exists())) 
        { //假如文件不存在
        	try   //捕捉异常，因为有可能创建不成功
        	{
        		file.createNewFile();
        	}
        	catch(IOException e)
        	{
        		e.printStackTrace();
        	}
        }
        return YamlConfiguration.loadConfiguration(file);
	}
	public FileConfiguration load(String path)
	{
		File file=new File(path);
		if(!file.exists())
		{
			try
		{
				file.createNewFile();
		}
			catch(IOException e)
			{
				e.printStackTrace();
			}
		}
		return YamlConfiguration.loadConfiguration(new File(path));
	}
	
	public void initItem()
	{
		recoverItem.setType(Material.POTION);
		recoverItem.addUnsafeEnchantment(Enchantment.LUCK, 1);
		ItemMeta meta = recoverItem.getItemMeta();
		meta.setDisplayName("");
	}
	
	public void initData()
	{
		blocks.clear();
		blocksForRecover.clear();
		playerData.clear();
	}
	
	public void saveConfig()
	{
		
		for(String name:playerData.keySet())
		{
			File file = new File(getDataFolder(), "/data/"+name+".yml");
			FileConfiguration config;
			config = load(file);
			config.set("AntiXray.Points", playerData.get(name));
			try {
				config.save(file);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		for(int i=0; i<playerData.size(); i++)
		{
			
		}
	}
	
	public void loadConfig()
	{
		File file = new File(getDataFolder(), "config.yml");
		FileConfiguration config;
		if(!file.exists())
		{
			config = load(file);

			config.set("Points", 600);

			config.set("BlockInfo", "14:10,15:5,56:30,129:50");

			config.set("RecoverItem.Point", 100);
			config.set("RecoverItem.Name", "§2矿工药水");
			config.set("RecoverItem.Lore", "§a这是一瓶神奇的药水%§a右键喝掉它可以增加100挖矿点数");
			
			config.set("HeightUnlimit", 60);
			
			config.set("RecoverPointByBreakingBlock.OnUse", false);
			
			config.set("RecoverPointByBreakingBlock.BlockInfo", "1:1,2:1");
			
			try {
				config.save(file);
			} catch (IOException e) {
				e.printStackTrace();
			}
			
			loadConfig();
		}
		
		config = load(file);
		initData();
		heightUnlimit = config.getInt("HeightUnlimit");
		totalPoints = config.getInt("Points");
		String blockInfo = config.getString("BlockInfo");
		String RecoverBlock = config.getString("RecoverPointByBreakingBlock.BlockInfo");
		recoverBlock = config.getBoolean("RecoverPointByBreakingBlock.OnUse");
		int blockID = 0;
		int blockPoint = 0;
		
		for(String i:blockInfo.split(","))
		{
			blockID = Integer.valueOf(i.split(":")[0]);
			blockPoint = Integer.valueOf(i.split(":")[1]);
			blocks.put(blockID, blockPoint);
		}
		
		for(String i:RecoverBlock.split(","))
		{
			blockID = Integer.valueOf(i.split(":")[0]);
			blockPoint = Integer.valueOf(i.split(":")[1]);
			blocksForRecover.put(blockID, blockPoint);
		}

		String itemName = config.getString("RecoverItem.Name");
		String itemLore = config.getString("RecoverItem.Lore");
		recoverPoint = config.getInt("RecoverItem.Point");

		recoverItem = new ItemStack(Material.POTION);
		ItemMeta meta = recoverItem.getItemMeta();
		meta.setDisplayName(itemName);

		ArrayList<String> lore = new ArrayList<String>();
		for(String l:itemLore.split("%"))
		{
			lore.add(l);
		}
		meta.setLore(lore);

		recoverItem.setItemMeta(meta);
		
	}
	
	public boolean onCommand(CommandSender sender,Command cmd,String label,String[] args)  
	{
		if (cmd.getName().equalsIgnoreCase("ax"))
		{
			if(!sender.hasPermission("antiXray.player"))
			{
				return true;
			}
			
			if (args.length==0)
			{
				sender.sendMessage("§a=========[反透视系统]=========");
				sender.sendMessage("§a/ax my §3查看当前剩余挖矿点数");
				if(sender.isOp())
				{
					sender.sendMessage("§a/ax get §3获得一个矿工药水");
					sender.sendMessage("§a/ax check [玩家名] §3查看目标玩家剩余挖矿点数");
					sender.sendMessage("§a/ax give [玩家名] [挖矿点数] §3给予目标玩家相应的挖矿点数");
					sender.sendMessage("§a/ax reset [玩家名] §3重置该玩家的挖矿点数");
					sender.sendMessage("§a/ax reload §3重载插件");
				}
				return true;
			}
			
			if(args[0].equalsIgnoreCase("my"))
			{
				if(sender instanceof Player)
				{
					Player p = (Player)sender;
					int currentPoint = playerData.get(p.getName());
					p.sendMessage("§a[反透视系统] §3您当前剩余挖矿点数为§a"+String.valueOf(currentPoint));
				}
			}
			
			if(args[0].equalsIgnoreCase("reload"))
			{
				if(sender.isOp())
				{
					loadConfig();
					sender.sendMessage("§a[反透视系统] §c配置重载成功!");
				}
			}
			
			if(args[0].equalsIgnoreCase("check"))
			{
				if(sender.isOp())
				{
					if(args.length==2)
					{
						Player p = Bukkit.getServer().getPlayer(args[1]);
						if(p==null)
						{
							sender.sendMessage("§a[反透视系统] §4目标玩家不在线或不存在");
							return true;
						}
						int currentPoint = playerData.get(args[1]);
						p.sendMessage("§a[反透视系统] §3该玩家当前剩余挖矿点数为§a"+String.valueOf(currentPoint));
					}
					else
					{
						sender.sendMessage("§a/ax check [玩家名] §3查看目标玩家剩余挖矿点数");
					}
				}
				else
				{
					sender.sendMessage("§a[反透视系统] §c你没有权限这么做");
				}
				
			}
			
			if(args[0].equalsIgnoreCase("give"))
			{
				if(sender.isOp())
				{
					if(args.length==3)
					{
						Player p = Bukkit.getServer().getPlayer(args[1]);
						if(p==null)
						{
							sender.sendMessage("§a[反透视系统] §4目标玩家不在线或不存在");
							return true;
						}
						int previousPoint = playerData.get(args[1]);
						playerData.put(args[1], previousPoint+Integer.valueOf(args[2]));
						
						p.sendMessage("§a[反透视系统] §3你给予§a"+args[1]+" §2"+args[2]+"§3 挖矿点数，该玩家当前剩余挖矿点数为§a"+String.valueOf(previousPoint+Integer.valueOf(args[2])));
					}
					else
					{
						sender.sendMessage("§a/ax give [玩家名] [挖矿点数] §3给予目标玩家相应的挖矿点数");
					}
				}
				else
				{
					sender.sendMessage("§a[反透视系统] §c你没有权限这么做");
				}
			}
			
			if(args[0].equalsIgnoreCase("get"))
			{
				if(sender instanceof Player)
				{
					if(sender.isOp())
					{
						Player p = (Player)sender;
						p.getInventory().addItem(recoverItem);
						p.sendMessage("§a[反透视系统] §3获得物品");
					}
					else
					{
						sender.sendMessage("§a[反透视系统] §c你没有权限这么做");
					}
				}
				
			}
			
			if(args[0].equalsIgnoreCase("reset"))
			{
				if(sender.isOp())
				{
					if(args.length==2)
					{
						Player p = Bukkit.getServer().getPlayer(args[1]);
						if(p==null)
						{
							sender.sendMessage("§a[反透视系统] §c目标玩家不在线或不存在");
							return true;
						}
						playerData.put(args[1], totalPoints);
						sender.sendMessage("§a[反透视系统] §3已重置玩家§a"+args[1]+"§3的挖矿点数");
					}
					else
					{
						sender.sendMessage("§a/ax reset [玩家名] §3重置该玩家的挖矿点数");
					}
				}
				else
				{
					sender.sendMessage("§a[反透视系统] §c你没有权限这么做");
				}
			}
			return true;
		}

		return false;
		
	}
	
	
}

